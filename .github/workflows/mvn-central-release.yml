name: Release new version to Maven Central
on:
  push:
    branches: [main]
    paths:
      - 'version'
jobs:
  release-maven-central:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Checkout CI/CD repo
        uses: actions/checkout@v3
        with:
          repository: bitshifted/appforge-cicd
          path: cicd
      - name: Setup CI/CD scripts
        run: |
          cp cicd/scripts/* cicd
      - name: Configure Git user
        run: |
          git config user.email "actions@github.com"
          git config user.name "GitHub Actions"
      - name: Import GPG signing key
        uses: crazy-max/ghaction-import-gpg@v5
        with:
          gpg_private_key: ${{ secrets.MAVEN_SIGNING_KEY }}
          passphrase: ${{ secrets.MAVEN_SIGNING_KEY_PASSPHRASE }}
      - name: Setup SSH
        run: |
          echo "Setting up SSH..."
          mkdir ~/.ssh
          echo "$SSH_KEY" > ~/.ssh/appforge-key
          chmod 600 ~/.ssh/appforge-key
          cat <<EOF > ~/.ssh/config
          Host github.com
            User git
            IdentityFile ~/.ssh/appforge-key
            ForwardAgent yes
          EOF
          cat ~/.ssh/config
          echo "Starting SSH agent"
          eval "$(ssh-agent -s)"
          ssh-add ~/.ssh/appforge-key
        shell: bash
        env:
          SSH_KEY: ${{ secrets.APPFORGE_DEPLOY_PRIV_KEY }}
      - name: Install JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'
          server-id: maven-central-release
          server-username: MVN_CENTRAL_USERNAME
          server-password: MVN_CENTRAL_PASSWORD
      - name: Release to Maven repo
        run: |
          export VERSION=$(cat version)
          echo "Version to set: $VERSION"
          echo  "TAG_NAME=$VERSION" >> $GITHUB_ENV 
          mvn -P release -Dgpg.keyname=${{ secrets.GPG_KEY_NAME }} -Dgpg.passphrase=${{ secrets.MAVEN_SIGNING_KEY_PASSPHRASE }} \
              -Drevision=$VERSION deploy
        env:
          MVN_CENTRAL_USERNAME: ${{ vars.MVN_CENTRAL_USERNAME }}
          MVN_CENTRAL_PASSWORD: ${{ secrets.MVN_CENTRAL_PASSWORD }}
      - name: Tag version
        run: |
          git tag  v${{ env.TAG_NAME }}
          git push origin --tags

